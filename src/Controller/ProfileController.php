<?php

namespace App\Controller;
use App\Entity\Signup;
use Doctrine\ORM\EntityManager;
use App\Repository\SignupRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;

use Symfony\Component\HttpFoundation\Session\SessionInterface;
class ProfileController extends AbstractController
{

  
    /**
     * @Route("/profile", name="app_profile")
     */
    public function index(SessionInterface $session): Response
    { 
        $val = $session->get('key');
        if($val){
        return $this->render('profile/index.html.twig', [
           
        ]);
        }
        else{
            return $this->redirectToRoute('app_login');
        }

      
    }

     /**
     * @Route("/editprofile/{id}", name="edit_profile")
     */
    public function update(int $id,SessionInterface $session): Response
    { 
        //dd($id);
        $val = $session->get('key');
        if($val){
        $repository=$this->getDoctrine()->getRepository(Signup::class);
        $users=$repository->findOneBy(['id' => $id]);
        //dd($users);
         return $this->render('profile/editprofile.html.twig', [
           'users'=> $users
        ]);
        }
        else{
            return $this->redirectToRoute('app_login');
        }
    }
     /**
     * @Route("/update{id}", name="update_profile")
     */
    public function show(EntityManagerInterface $entityManager, int $id,request $request,SessionInterface $session): Response
    {   
        $val = $session->get('key');
        if($val){
        $fullname = $request->request->get('fullname');
        $username = $request->request->get('uname');
        $email = $request->request->get('uemail');
        $country = $request->request->get('country');
        $state = $request->request->get('state');
        $city = $request->request->get('city');
        $gender = $request->request->get('gender');
        $phone = $request->request->get('phone');
        $password = $request->request->get('password');
        $confirm_password = $request->request->get('confirm-password');
        $image = $request->files->get('image');
        //dd($image);
        $user = $entityManager->getRepository(Signup::class)->find($id);
        //dd($user);
        if (!$user) {
            throw $this->createNotFoundException(
                'No product found for id '.$id
            );
        }
        $fileName = $this->generateUniqueFileName().'.'.$image->guessExtension();
        $image->move(
            $this->getParameter('image'),
            $fileName
        );
        
        $user->setFullname($fullname);
        $user->setUsername($username);
        $user->setEmail($email);
        $user->setCountry($country);
        $user->setState($state);
        $user->setCity($city);
        $user->setGender($gender);
        $user->setContact($phone);
        $user->setPassword($password);
        $user->setConfirmpassword($confirm_password);
        $user->setImage($fileName);
        $entityManager->flush();
        return $this->redirectToRoute('edited_profile', [
            'id' => $user->getId()
        ]);
    }
    else{
        return $this->redirectToRoute('app_login');
    }
        //return $this->redirectToRoute('app_profile');
    }

      /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }



     /**
     * @Route("/edited/{id}", name="edited_profile")
     */
    public function updatedProfile(int $id,SessionInterface $session): Response
    { 
        //dd($id);
        $val = $session->get('key');
        if($val){
        $repository=$this->getDoctrine()->getRepository(Signup::class);
        $users=$repository->findOneBy(['id' => $id]);
        //dd($users);
         return $this->render('profile/index.html.twig', [
           'users'=> $users
        ]);
        }
        else{
            return $this->redirectToRoute('app_login');
        }
    }
        //dd($id);
        // $fullname = $request->request->get('fullname');
        // echo $fullname;
        // $username = $request->request->get('uname');
        // $email = $request->request->get('uemail');
        // $country = $request->request->get('country');
        // $state = $request->request->get('state');
        // $city = $request->request->get('city');
        // $gender = $request->request->get('gender');
        // $phone = $request->request->get('phone');
        // $password = $request->request->get('password');
        // $confirm_password = $request->request->get('confirm-password');
        // $image = $request->request->get('image');
        // $entityManager = $this->getDoctrine()->getManager();
     
        // //dd($id);
        // $user_signup = new Signup();
        // echo $fullname;
        // echo $email;
        // $queryBuilder = $this->$entityManager->createQueryBuilder('u');
        // $query = $queryBuilder->update('signup', 'u')
        // ->set('u.fullname', ':fullname')
        // ->set('u.username', ':username')
        // ->set('u.email', ':email')
        // ->set('u.country', ':country')
        // ->set('u.state', ':state')
        // ->set('u.city', ':city')
        // ->set('u.gender', ':gender')
        // ->set('u.phone', ':phone')
        // ->set('u.password', ':password')
        // ->set('u.confirmpassword', ':confirmpassword')
        // ->where('u.id = :editId')
        // ->setParameter('fullname', $fullname)
        // ->setParameter('username', $username)
        // ->setParameter('email', $email)
        // ->setParameter('country', $country)
        // ->setParameter('state', $state)
        // ->setParameter('city', $city)
        // ->setParameter('gender', $gender)
        // ->setParameter('phone', $phone)
        // ->setParameter('password', $password)
        // ->setParameter('confirmpassword', $confirm_password)
        // ->setParameter('image', $image)
        // ->setParameter('editId', $id)
        // ->getQuery();
        //  $result = $query->execute();

        // $user_signup->setFullname($fullname);
        // $user_signup->setUsername($username);
        // $user_signup->setEmail($email);
        // $user_signup->setCountry($country);
        // $user_signup->setState($state);
        // $user_signup->setCity($city);
        // $user_signup->setGender($gender);
        // $user_signup->setContact($phone);
        // $user_signup->setImage($image);
        // $user_signup->setPassword($password);
        // $user_signup->setConfirmpassword($confirm_password);
     
        // tell Doctrine you want to (eventually) save the Product (no queries yet)
        ///$entityManager->persist($user_signup);
        //$id=$user_signup->getId();
       // echo $id;
        // actually executes the queries (i.e. the INSERT query)
      // $entityManager->flush();
       //return $this->redirectToRoute('app_login');
       // return new Response('Saved new product with id '.$user_signup->getId().$user_signup->getEmail());
    //}

   

    
}
